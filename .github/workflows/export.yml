---
name: Export

env:
  GODOT_VERSION: 4.2.2
  # Use '.' if project.godot is in the repository root.
  PROJECT_DIR: src

on:
  workflow_call:
  workflow_dispatch:

permissions: { }

jobs:
  export:
    runs-on: ubuntu-22.04
    container:
      image: barichello/godot-ci:4.2.2

    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Setup container
        run: |
          apt update
          apt install -y brotli
          templatePath=.local/share/godot/export_templates
          mkdir -v -p "$HOME/$templatePath"
          mv "/root/$templatePath/${{ env.GODOT_VERSION }}.stable" "$HOME/$templatePath"

      # github.workspace and GITHUB_WORKSPACE are not the same in containers.
      - name: Export
        run: |
          mkdir -v -p export
          godot --headless --verbose --path ${{ env.PROJECT_DIR }} --export-release Web "$GITHUB_WORKSPACE/export/index.html"
          cp build/_headers export/
          sed -i "s/EXPORT_TIMESTAMP/$(date +'%Y-%m-%dT%H:%M:%S%:z')/g" export/_headers

      # The uncompressed wasm hash will be used as the cache key.
      - name: Hash uncompressed wasm
        id: hash-wasm
        run: echo "sha=${{ hashFiles('export/index.wasm') }}" > "$GITHUB_OUTPUT"

      - name: Cache compressed wasm
        id: cache-wasm
        uses: actions/cache@v4
        with:
          path: export/index.wasm
          key: ${{ steps.hash-wasm.outputs.sha }}

      # This can take about a minute.
      - name: Brotli compression
        if: steps.cache-wasm.outputs.cache-hit != 'true'
        run: |
          cd export
          brotli index.wasm
          mv index.wasm.br index.wasm

      - name: Check for files over 25 MB
        run: if find export -type f -size +25M | grep .; then exit 1; fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          path: export
          if-no-files-found: error
          retention-days: 1
