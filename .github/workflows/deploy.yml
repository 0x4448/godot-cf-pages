---
name: Export and deploy

on:
  pull_request:
    branches:
      - main
    paths:
      - .github/workflows/deploy.yml
      - deploy/**
      - src/**
    types:
      - closed

  workflow_dispatch:

permissions: { }

env:
  GODOT_VERSION: 4.2.2
  # Use '.' if project.godot is in the repository root.
  PROJECT_DIR: src

jobs:
  export:
    runs-on: ubuntu-22.04
    container:
      image: barichello/godot-ci:4.2.2

    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Setup container
        run: |
          apt update
          apt install -y brotli
          templatePath=.local/share/godot/export_templates
          mkdir -v -p "$HOME/$templatePath"
          mv "/root/$templatePath/${{ env.GODOT_VERSION }}.stable" "$HOME/$templatePath"

      # github.workspace and GITHUB_WORKSPACE are not the same in containers.
      - name: Build
        run: |
          mkdir -v -p build
          godot --headless --verbose --path ${{ env.PROJECT_DIR }} --export-release Web "$GITHUB_WORKSPACE/build/index.html"
          cp deploy/_headers build/

      # The uncompressed wasm hash will be used as the cache key.
      - name: Hash uncompressed wasm
        id: hash-wasm
        run: echo "sha=${{ hashFiles('build/index.wasm') }}" > "$GITHUB_OUTPUT"

      - name: Cache compressed wasm
        id: cache-wasm
        uses: actions/cache@v4
        with:
          path: build/index.wasm
          key: ${{ steps.hash-wasm.outputs.sha }}

      # This can take about a minute.
      - name: Brotli compression
        if: steps.cache-wasm.outputs.cache-hit != 'true'
        run: |
          cd build
          brotli index.wasm
          mv index.wasm.br index.wasm

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          path: build
          if-no-files-found: error
          retention-days: 1

  # Deploy is a separate job because it requires elevated permissions.
  deploy:
    runs-on: ubuntu-22.04
    needs: export
    permissions:
      contents: write

    steps:
      # Set up access to push to repo. LFS is not required because only the artifact will be used.
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: false

      - name: Download artifact
        uses: actions/download-artifact@v4

      - name: Configure git
        run: |
          git config --global --add safe.directory ${{ github.workspace }}
          git config --global user.name github-actions[bot]
          git config --global user.email 41898282+github-actions[bot]@users.noreply.github.com

      # The new branch contains only the files from the artifact.
      - name: Commit and force push
        run: |
          git switch -c cf-pages/${{ github.ref_name }}
          git rm -rf .
          mv artifact/* .
          rmdir artifact

          git add -A -f
          git commit -m "chore: ${{ github.workflow }} ${GITHUB_SHA:0:7}"
          git push -f origin cf-pages/${{ github.ref_name }}
